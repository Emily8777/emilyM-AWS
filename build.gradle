buildscript{
    ext {
        springBootVersion = '2.4.1'
    }
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
    }
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'

group 'com.emilyM.book'
version '1.0.1-SNAPSHOT-'+new Date().format("yyyyMMddHHmmss")'


repositories {
    mavenCentral()
}

dependencies {
    implementation('org.springframework.boot:spring-boot-starter-web')
    implementation 'org.projectlombok:lombok:1.18.22'//0921 p.37
    testImplementation('org.springframework.boot:spring-boot-starter-test') //0921 p.37

    // lombok
    implementation('org.projectlombok:lombok') //0922 p.67
    annotationProcessor('org.projectlombok:lombok')
    testImplementation('org.projectlombok:lombok')
    testAnnotationProcessor('org.projectlombok:lombok')

    // Spring Data Jpa
    implementation('org.springframework.boot:spring-boot-starter-data-jpa')
    implementation('com.h2database:h2')

    //mustache p.131
    implementation('org.springframework.boot:spring-boot-starter-mustache')
    testImplementation('org.springframework.boot:spring-boot-starter-mustache') // 추가 안하면 테스트코드 에러남

    //스프링 시큐리티 p.179 - 1101
    implementation('org.springframework.boot:spring-boot-starter-oauth2-client')

    // 데이터베이스 의존성 p.202
    implementation('org.springframework.session:spring-session-jdbc')

    // 1108 권한 관련 p.216
    testImplementation("org.springframework.security:spring-security-test")

    // 1204 DB 관련 p.309
    implementation("org.mariadb.jdbc:mariadb-java-client")

}
test {
    useJUnitPlatform()
}